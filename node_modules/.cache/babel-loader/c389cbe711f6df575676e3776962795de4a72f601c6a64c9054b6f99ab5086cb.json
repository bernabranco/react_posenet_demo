{"ast":null,"code":"var _jsxFileName = \"/Users/brancob3/dev-personal/react_posenet_demo/src/components/PoseNetComponent.js\",\n  _s = $RefreshSig$();\nimport React, { useRef, useEffect } from \"react\";\nimport * as posenet from \"@tensorflow-models/posenet\";\nimport * as styles from \"./PoseNetComponent.styles\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PoseNetComponent = () => {\n  _s();\n  const videoRef = useRef(null);\n  const canvasRef = useRef(null);\n  const streamSize = 400;\n  useEffect(() => {\n    const setupCamera = async () => {\n      if (navigator.mediaDevices && navigator.mediaDevices.getUserMedia) {\n        const stream = await navigator.mediaDevices.getUserMedia({\n          video: true\n        });\n        if (videoRef.current) {\n          videoRef.current.srcObject = stream;\n\n          //  video width and height must be defined!\n          videoRef.current.width = streamSize;\n          videoRef.current.height = streamSize;\n        }\n      }\n    };\n    const detectPose = async () => {\n      const net = await posenet.load();\n      setInterval(async () => {\n        if (videoRef.current) {\n          const pose = await net.estimateSinglePose(videoRef.current);\n          if (canvasRef.current) {\n            const ctx = canvasRef.current.getContext(\"2d\");\n            canvasRef.current.width = videoRef.current.width;\n            canvasRef.current.height = videoRef.current.height;\n            ctx.clearRect(0, 0, canvasRef.current.width, canvasRef.current.height);\n            ctx.drawImage(videoRef.current, 0, 0, canvasRef.current.width, canvasRef.current.height);\n            drawPose(pose.keypoints, ctx);\n\n            // Log keypoints' values\n            pose.keypoints.forEach(keypoint => {\n              console.log(`${keypoint.part}: (${keypoint.position.x},${keypoint.position.y})`);\n            });\n          }\n        }\n      }, 100); // Adjust the interval for your desired frame rate\n    };\n\n    const drawPose = (keypoints, ctx) => {\n      keypoints.forEach(keypoint => {\n        const {\n          x,\n          y\n        } = keypoint.position;\n        ctx.beginPath();\n        ctx.arc(x, y, 5, 0, 2 * Math.PI);\n        ctx.fillStyle = \"#FF0000\";\n        ctx.fill();\n      });\n      keypoints.forEach(keypoint => {\n        if (keypoint.part !== \"nose\") {\n          const {\n            x,\n            y\n          } = keypoint.position;\n          ctx.beginPath();\n          ctx.moveTo(keypoints[0].position.x, keypoints[0].position.y);\n          ctx.lineTo(x, y);\n          ctx.strokeStyle = \"#00FF00\";\n          ctx.stroke();\n        }\n      });\n    };\n    setupCamera();\n    detectPose();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: styles.container,\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Skeleton Detection with React and PoseNet\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"This is a small demo of how to create a React app using Posenet\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"It was made and shared to give developers a quick and out of the box way\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"to start working with realtime skeleton detection in their React projects.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: styles.posenetContainer,\n      children: [/*#__PURE__*/_jsxDEV(\"video\", {\n        ref: videoRef,\n        autoPlay: true,\n        muted: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"canvas\", {\n        style: styles.canvas,\n        ref: canvasRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 92,\n    columnNumber: 5\n  }, this);\n};\n_s(PoseNetComponent, \"0gwqVvoOV2or9Ql4L8GH2BGn3hc=\");\n_c = PoseNetComponent;\nexport default PoseNetComponent;\nvar _c;\n$RefreshReg$(_c, \"PoseNetComponent\");","map":{"version":3,"names":["React","useRef","useEffect","posenet","styles","jsxDEV","_jsxDEV","PoseNetComponent","_s","videoRef","canvasRef","streamSize","setupCamera","navigator","mediaDevices","getUserMedia","stream","video","current","srcObject","width","height","detectPose","net","load","setInterval","pose","estimateSinglePose","ctx","getContext","clearRect","drawImage","drawPose","keypoints","forEach","keypoint","console","log","part","position","x","y","beginPath","arc","Math","PI","fillStyle","fill","moveTo","lineTo","strokeStyle","stroke","style","container","children","fileName","_jsxFileName","lineNumber","columnNumber","posenetContainer","ref","autoPlay","muted","canvas","_c","$RefreshReg$"],"sources":["/Users/brancob3/dev-personal/react_posenet_demo/src/components/PoseNetComponent.js"],"sourcesContent":["import React, { useRef, useEffect } from \"react\";\nimport * as posenet from \"@tensorflow-models/posenet\";\nimport * as styles from \"./PoseNetComponent.styles\";\n\nconst PoseNetComponent = () => {\n  const videoRef = useRef(null);\n  const canvasRef = useRef(null);\n\n  const streamSize = 400;\n\n  useEffect(() => {\n    const setupCamera = async () => {\n      if (navigator.mediaDevices && navigator.mediaDevices.getUserMedia) {\n        const stream = await navigator.mediaDevices.getUserMedia({\n          video: true,\n        });\n        if (videoRef.current) {\n          videoRef.current.srcObject = stream;\n\n          //  video width and height must be defined!\n          videoRef.current.width = streamSize;\n          videoRef.current.height = streamSize;\n        }\n      }\n    };\n\n    const detectPose = async () => {\n      const net = await posenet.load();\n\n      setInterval(async () => {\n        if (videoRef.current) {\n          const pose = await net.estimateSinglePose(videoRef.current);\n\n          if (canvasRef.current) {\n            const ctx = canvasRef.current.getContext(\"2d\");\n            canvasRef.current.width = videoRef.current.width;\n            canvasRef.current.height = videoRef.current.height;\n\n            ctx.clearRect(\n              0,\n              0,\n              canvasRef.current.width,\n              canvasRef.current.height\n            );\n            ctx.drawImage(\n              videoRef.current,\n              0,\n              0,\n              canvasRef.current.width,\n              canvasRef.current.height\n            );\n\n            drawPose(pose.keypoints, ctx);\n\n            // Log keypoints' values\n            pose.keypoints.forEach((keypoint) => {\n              console.log(\n                `${keypoint.part}: (${keypoint.position.x},${keypoint.position.y})`\n              );\n            });\n          }\n        }\n      }, 100); // Adjust the interval for your desired frame rate\n    };\n\n    const drawPose = (keypoints, ctx) => {\n      keypoints.forEach((keypoint) => {\n        const { x, y } = keypoint.position;\n        ctx.beginPath();\n        ctx.arc(x, y, 5, 0, 2 * Math.PI);\n        ctx.fillStyle = \"#FF0000\";\n        ctx.fill();\n      });\n\n      keypoints.forEach((keypoint) => {\n        if (keypoint.part !== \"nose\") {\n          const { x, y } = keypoint.position;\n          ctx.beginPath();\n          ctx.moveTo(keypoints[0].position.x, keypoints[0].position.y);\n          ctx.lineTo(x, y);\n          ctx.strokeStyle = \"#00FF00\";\n          ctx.stroke();\n        }\n      });\n    };\n\n    setupCamera();\n    detectPose();\n  }, []);\n\n  return (\n    <div style={styles.container}>\n      <h1>Skeleton Detection with React and PoseNet</h1>\n      <p>This is a small demo of how to create a React app using Posenet</p>\n      <p>\n        It was made and shared to give developers a quick and out of the box way\n      </p>\n      <p>\n        to start working with realtime skeleton detection in their React\n        projects.\n      </p>\n      <div style={styles.posenetContainer}>\n        <video ref={videoRef} autoPlay muted />\n        <canvas style={styles.canvas} ref={canvasRef} />\n      </div>\n    </div>\n  );\n};\n\nexport default PoseNetComponent;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}